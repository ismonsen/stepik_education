# Задача 3.7_1
"""
Напишите программу, которая принимает на стандартный вход список игр футбольных команд с результатом матча и
выводит на стандартный вывод сводную таблицу результатов всех матчей.
За победу команде начисляется 3 очка, за поражение — 0, за ничью — 1.
Формат ввода следующий:
В первой строке указано целое число nn — количество завершенных игр.
После этого идет nn строк, в которых записаны результаты игры в следующем формате:
Первая_команда;Забито_первой_командой;Вторая_команда;Забито_второй_командой
Вывод программы необходимо оформить следующим образом:
Команда:Всего_игр Побед Ничьих Поражений Всего_очков
"""


def update(d, key1, key2, val1, val2):
    if key1 not in d:
        d[key1] = [0, 0, 0, 0, 0]
    if key2 not in d:
        d[key2] = [0, 0, 0, 0, 0]
    if val1 > val2:  # выигрыш первой
        d[key1][0] += 1
        d[key1][1] += 1
        d[key1][4] += 3
        d[key2][0] += 1
        d[key2][3] += 1
    elif val1 < val2:  # выигрыш второй
        d[key2][0] += 1
        d[key2][1] += 1
        d[key2][4] += 3
        d[key1][0] += 1
        d[key1][3] += 1
    else:  # ничья
        d[key2][0] += 1
        d[key2][2] += 1
        d[key2][4] += 1
        d[key1][0] += 1
        d[key1][2] += 1
        d[key1][4] += 1


table = {}  # {Команда}:[Всего_игр, Побед, Ничьих, Поражений, Всего_очков]
for i in range(int(input())):
    line = input().strip().split(';')
    update(table, line[0], line[2], int(line[1]), int(line[3]))
for key in table:
    print(key + ':', *table[key])

# Задача 3.7_2
"""
На вход подается 4 строки: 1 - строка символов 2 - шифр, нужно зашифровать строку 3 и дешифровать строку 4
1 - abcd
2 - *d%#
3 - abacabadaba
4 - #*%*d*%
"""
inp = []
for i in range(4):
    inp.append(input().strip())
for i in range(len(inp[2])):
    print(inp[1][inp[0].find(inp[2][i])], end='')
print()
for i in range(len(inp[3])):
    print(inp[0][inp[1].find(inp[3][i])], end='')

# Задача 3.7_3
"""
На вход программе первой строкой передаётся количество dd известных нам слов, после чего на 
dd строках указываются эти слова. Затем передаётся количество ll строк текста для проверки, после чего ll строк текста.
Выведите уникальные "ошибки" в произвольном порядке. Работу производите без учёта регистра.
"""
dic, dic1 = set(), set()
for i in range(int(input())):
    dic.add(input().lower())
l = []
for i in range(int(input())):
    l.append(input().lower().split())
    for j in range(len(l)):
        for x in range(len(l[j])):
            dic1.add(str(l[j][x]))
    l.clear()
print(*(dic1 - dic), sep='\n')

# Задача 3.7_4
"""
Программе подаётся на вход число команд nn, которые нужно выполнить черепашке, после чего nn строк с самими командами. 
Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки. 
Все координаты целочисленные.
"""
n = int(input())
d = {'север': 0, 'запад': 0, 'юг': 0, 'восток': 0}
for i in range(n):
    x = input().split()
    d[x[0]] += int(x[1])
print(d['восток'] - d['запад'], d['север'] - d['юг'])

# Задача 3.7_5
"""
Дан файл с таблицей в формате TSV с информацией о росте школьников разных классов.
Напишите программу, которая прочитает этот файл и подсчитает для каждого класса средний рост учащегося
"""
d = {i: [0, 0] for i in range(1, 12)}
with open('file.txt') as inf:
    for line in inf:
        d[int(line.split()[0])][0] += int(line.split()[2])
        d[int(line.split()[0])][1] += 1
for key, value in d.items():
    if value == [0, 0]:
        print(key, '-')
    else:
        print(key, value[0] / value[1])