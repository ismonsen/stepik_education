# Задача 3.1_1
# Напишите функцию f(x), которая возвращает значение следующей функции, определённой на всей числовой прямой:


def f(x):
    if x <= -2:
        return 1 - (x + 2) * (x + 2)
    elif -2 < x <= 2:
        return x / (-2)
    elif x > 2:
        return (x - 2) ** 2 + 1


# Задача 3.1_2
# Напишите функцию modify_list(l), которая принимает на вход список целых чисел, удаляет из него все нечётные
# значения, а чётные нацело делит на два.
def modify_list(l):
    i = 0
    while i != len(l):
        if l[i] % 2 == 0:
            l[i] = int(l[i] / 2)
            i += 1
        else:
            del l[i]


# Задача 3.2_1
"""Напишите функцию update_dictionary(d, key, value), 
которая принимает на вход словарь dd и два числа: key и value.
Если ключ key есть в словаре dd, то добавьте значение value в список, который хранится по этому ключу.
Если ключа key нет в словаре, то нужно добавить значение в список по ключу 2 * key2∗key. Если и ключа 
2 * key2∗key нет, то нужно добавить ключ 2 * key2∗key в словарь и сопоставить ему список 
из переданного элемента [value]."""


def update_dictionary(d, key, value):
    if key in d:
        d[key].append(value)
    elif key * 2 in d:
        d[key * 2].append(value)
    else:
        d[key * 2] = [value]


# Задача 3.2_2
# Программа должна считывать одну строку со стандартного ввода и выводить для каждого уникального слова
# в этой строке число его повторений (без учёта регистра) в формате "слово количество" (ac 1)
lst = [i.lower() for i in input().split()]
dic = {}
for i in lst:
    if i not in dic:
        dic[i] = 1
    else:
        dic[i] += 1
for key, val in dic.items():
    print(key, val)

# Задача 3.2_3
# При считывании числа x программа должна на отдельной строке вывести значение f(x)
# Функция f(x) уже реализована и доступна для вызова.
n = int(input())
x = [int(input()) for i in range(n)]
d = {}
for i in range(n):
    if x[i] not in d.keys():
        d[x[i]] = f(x[i])
for i in range(n):
    if x[i] in d.keys():
        print(d[x[i]])

# Задача 3.4_1
# Реализовать дешифратор строки a3b4c2e10b1 -> к нормальному виду
with open('dataset_3363_2.txt', 'r') as f:
    s = f.readline().strip()
i = 0
while i < len(s):
    j = i + 1
    while j < len(s) and s[j].isdigit():
        j += 1
    print(s[i] * int(s[i + 1:j]), end='')
    i = j

# Задача 3.4_2
# Напишите программу, которая считывает текст из файла (в файле может быть больше одной строки) и выводит самое частое
# слово в этом тексте и через пробел то, сколько раз оно встретилось. Если таких слов несколько, вывести
# лексикографически первое (можно использовать оператор < для строк).
with open('dataset_3363_3.txt') as inf, open('MostPopularWord.txt', 'w') as ouf:
    max_c = 0
    s = inf.read().lower().strip().split()
    s.sort()
    for word in s:
        counter = s.count(word)
        if counter > max_c:
            max_c = counter
            result_word = word
    ouf.write(result_word + ' ' + str(max_c))

# Задача 3.4_3
"""
Имеется файл с данными по успеваемости абитуриентов. Он представляет из себя набор строк, где в каждой строке 
записана следующая информация: Фамилия;Оценка_по_математике;Оценка_по_физике;Оценка_по_русскому_языку
Поля внутри строки разделены точкой с запятой, оценки — целые числа. Напишите программу, которая считывает 
исходный файл с подобной структурой и для каждого абитуриента записывает его среднюю оценку по трём предметам 
на отдельной строке, соответствующей этому абитуриенту, в файл с ответом.
"""
kol, a1, b1, c1 = 0, 0, 0, 0
with open('dataset_3363_4.txt', 'r') as inf:
    for line in inf:
        line = line.strip().split(';')
        a, b, c = int(line[1]), int(line[2]), int(line[3])
        print((a + b + c) / 3)
        kol += 1
        a1 += a
        b1 += b
        c1 += c
print(a1 / kol, b1 / kol, c1 / kol)

# Задача 3.5_1
# Напишите программу, которая подключает модуль math и, используя значение числа \piπ из этого модуля, находит
# для переданного ей на стандартный ввод радиуса круга периметр этого круга и выводит его на стандартный вывод.
import math

r = float(input())
print(2 * r * math.pi)

# Задача 3.5_2
# Напишите программу, которая запускается из консоли и печатает значения всех переданных аргументов на экран
# (имя скрипта выводить не нужно). Не изменяйте порядок аргументов при выводе. Для доступа к аргументам командной
# строки программы подключите модуль sys и используйте переменную argv из этого модуля.
import sys

for i in range(1, len(sys.argv)):
    print(sys.argv[i], end=' ')

# Задача 3.6_1
# Скачайте файл. В нём указан адрес другого файла, который нужно скачать с использованием модуля requests
# и посчитать число строк в нём.
import requests

with open('dataset_3378_2.txt') as inf:
    r = requests.get(inf.readline().strip())
    print(len(r.text.splitlines()))

# Задача 3.6_2
# Имеется набор файлов, каждый из которых, кроме последнего, содержит имя следующего файла.
# Первое слово в тексте последнего файла: "We".
import requests
url, name = 'https://stepic.org/media/attachments/course67/3.6.3/', '699991.txt'
while name[:2] != 'We':
    name = requests.get(url + name).text
print(name)