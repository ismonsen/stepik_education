# Задача 2.1_2
"""
На вход программе подаются два целых числа aa и bb. Напишите программу, которая выводит:
сумму чисел aa и bb;
разность чисел aa и bb;
произведение чисел aa и bb;
частное чисел aa и bb;
целую часть от деления числа aa на bb;
остаток от деления числа aa на bb;
корень квадратный из суммы их 10-х степеней: \sqrt{a^{10} + b^{10}}
"""
import math
a, b = int(input()), int(input())
print(a + b)
print(a - b)
print(a * b)
print(a / b)
print(a // b)
print(a % b)
print(math.sqrt(math.pow(a, 10) + math.pow(b, 10)))

# Задача 2.1_3
"""
Напишите программу для вычисления и оценки индекса массы тела (ИМТ) человека. ИМТ показывает весит человек 
больше или меньше нормы для своего роста. ИМТ человека рассчитывают по формуле: масса / рост^2
"""
mass, height = float(input()), float(input())
res = mass/(height * height)
if 18.5 <= res <= 25.0:
    print('Оптимальная масса')
elif res < 18.5:
    print('Недостаточная масса')
else:
    print('Избыточная масса')

# Задача 2.1_3
# Дана строка текста. Напишите программу для подсчета стоимости строки, исходя из того, что один любой символ
# (в том числе пробел) стоит 6060 копеек. Ответ дайте в рублях и копейках в соответствии с примерами.
st = input()
rub = len(st) * 60 // 100
kop = len(st) * 60 % 100
print(rub, 'р.', kop, 'коп.')

# Задача 2.1_4
# Дана строка, состоящая из слов, разделенных пробелами. Напишите программу, которая подсчитывает
# количество слов в этой строке.
print(len(input().split()))

# Задача 2.1_5
# Напишите программу, которая считывает год и отображает название связанного с ним животного. Ваша программа
# должна корректно работать с любым годом, не только теми, что перечислены в таблице.
lst = ["Дракон", "Змея", "Лошадь", "Овца", "Обезьяна", "Петух", "Собака", "Свинья", "Крыса", "Бык", "Тигр", "Заяц"]
print(lst[(int(input()) + 4) % 12])

# Задача 2.1_6
# Дано пятизначное или шестизначное натуральное число. Напишите программу, которая изменит порядок
# его последних пяти цифр на обратный.
s = input()
print(int(s[:-5] + s[-5:][::-1]))

# Задача 2.1_7
# На вход программе подаётся натуральное число. Напишите программу, которая вставляет в заданное число запятые в
# соответствии со стандартным американским соглашением о запятых в больших числах.
num = int(input())
print(f'{num:,}')

# Задача 2.1_9
"""
Задача Иосифа Флавия:
n человек, пронумерованных числами от 11 до nn, стоят в кругу. Они начинают считаться, каждый kk-й по счету человек 
выбывает из круга, после чего счет продолжается со следующего за ним человека. Напишите программу, определяющую номер 
человека, который останется в кругу последним.
"""
n, k = int(input()), int(input())
l = 0
for i in range(1, n + 1):
    l = (l + k) % i
print(l + 1)

# Задача 2.2_1
# Дан набор точек на координатной плоскости. Необходимо подсчитать и вывести количество точек, лежащих
# в каждой координатной четверти.
first, second, third, fourth = 0, 0, 0, 0
for i in range(int(input())):
    x, y = input().split(' ')
    if int(x) > 0 and int(y) > 0:
        first += 1
    elif int(x) < 0 < int(y):
        second += 1
    elif int(x) < 0 and int(y) < 0:
        third += 1
    elif int(x) > 0 > int(y):
        fourth += 1
print('Первая четверть:', first)
print('Вторая четверть:', second)
print('Третья четверть:', third)
print('Четвертая четверть:', fourth)

# Задача 2.2_2
"""
Больше предыдущего
На вход программе подается строка текста из натуральных чисел. Из неё формируется список чисел. Напишите программу 
подсчета количества чисел, больше предшествующего им в этом списке числа, то есть, стоят вслед за меньшим числом. 
"""
s, n = [int(i) for i in input().split()], 0
for i in range(1, len(s)):
    if s[i] > s[i - 1]:
        n += 1
print(n)

# Задача 2.2_3
"""
Назад, вперёд и наоборот
На вход программе подается строка текста из натуральных чисел. Из элементов строки формируется список чисел. Напишите 
программу, которая меняет местами соседние элементы списка (a[0] c a[1], a[2] c a[3] и т.д.). Если в списке нечетное 
количество элементов, то последний остается на своем месте.
"""
s = input().split()
for i in range(1, len(s), 2):
    s[i], s[i - 1] = s[i - 1], s[i]
print(*s)

# Задача 2.2_4
"""
На вход программе подается строка текста из натуральных чисел. Из элементов строки формируется список чисел. 
Напишите программу циклического сдвига элементов списка направо, когда последний элемент становится первым, 
а остальные сдвигаются на одну позицию вперед, в сторону увеличения индексов.
"""
s = input().split()
print(s[-1], *s[:-1])

# Задача 2.2_5
"""
На вход программе подается строка текста, содержащая натуральные числа, расположенные по неубыванию. 
Из строки формируется список чисел. Напишите программу для подсчета количества разных элементов в списке.
"""
print(len(set(input().split())))

# Задача 2.2_6
"""
Напишите программу для определения, является ли число произведением двух чисел из данного набора, 
выводящую результат в виде ответа «ДА» или «НЕТ».
"""
n, s, condition = int(input()), [], 'НЕТ'
for i in range(n):
    s.append(int(input()))
big = int(input())
for i in range(len(s)):
    for j in s[:i] + s[i + 1:]:
        if s[i] * j == big:
            condition = 'ДА'
print(condition)

# Задача 2.2_7
# Камень, ножницы, бумага
m = {'камень-камень': 'ничья', 'камень-ножницы': 'Тимур', 'камень-бумага': 'Руслан',
     'ножницы-ножницы': 'ничья','ножницы-бумага': 'Тимур', 'ножницы-камень': 'Руслан',
     "бумага-бумага": 'ничья','бумага-камень': 'Тимур','бумага-ножницы': 'Руслан'}
print(m[input() + '-' + input()])

# Задача 2.2_8
# Камень, ножницы, бумага, ящерица, Спок
m = {'камень-камень': 'ничья', 'камень-ножницы': 'Тимур', 'камень-бумага': 'Руслан',
     'камень-ящерица': 'Тимур', 'камень-Спок': 'Руслан', 'ножницы-ножницы': 'ничья',
     'ножницы-бумага': 'Тимур', 'ножницы-камень': 'Руслан', 'ножницы-ящерица': 'Тимур',
     'ножницы-Спок': 'Руслан', 'бумага-бумага': 'ничья', 'бумага-камень': 'Тимур',
     'бумага-ножницы': 'Руслан', 'бумага-ящерица': 'Руслан', 'бумага-Спок': 'Руслан',
     'ящерица-ящерица': 'ничья', 'ящерица-Спок': 'Тимур', 'ящерица-ножницы': 'Руслан',
     'ящерица-бумага': 'Тимур', 'ящерица-камень': 'Руслан', 'Спок-Спок': 'ничья',
     'Спок-ножницы': 'Тимур', 'Спок-бамага': 'Руслан', 'Спок-камень': 'Тимур',
     'Спок-ящерица': 'Руслан'}
print(m[input() + '-' + input()])

# Задача 2.2_9
# Дана строка текста, состоящая из букв русского алфавита "О" и "Р".
# Буква "О" – соответствует выпадению Орла, а буква "Р" – соответствует выпадению Решки.
# Напишите программу, которая подсчитывает наибольшее количество подряд выпавших Решек.
print(len(max(input().split('О'))))

# Задача 2.2_10
"""
Для каждого холодильника существует строка с данными, состоящая из строчных букв и цифр, и если в ней 
присутствует слово "anton" (необязательно рядом стоящие буквы, главное наличие последовательности букв), 
то холодильник заражен и нужно вывести номер холодильника, нумерация начинается с единицы
Формат входных данных
В первой строке подаётся число nn – количество холодильников. В последующих nn строках вводятся строки, 
содержащие латинские строчные буквы и цифры, в каждой строке от 55 до 100100 символов.
"""
import re
for _ in range(int(input())):
    if re.search(r'.*a.*n.*t.*o.*n', input()):
        print(_ + 1, end=' ')

# Задача 2.2_11
# Роскомнадзор запретил букву а
"""
Необходимо написать программу, реализующую алгоритм написания этой песни. Алгоритм выводит в конце предложения 
следующую в алфавитном порядке букву, если она встречается в строке текста, а очередную строку отображает 
уже без этой буквы.
"""
word = input() + ' запретил букву'
b = ['а', 'б', 'в', 'г', 'д', 'е', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х',
     'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я']
for i in b:
    if i in word:
        print(word, i)
        word = word.replace(i, "").strip().replace("  ", " ")